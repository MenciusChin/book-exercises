# Create a variable `my_name` that contains your name
my_name <- "Mengzhi Qin"
# Create a variable `name_length` that holds how many letters (including spaces)
# are in your name (use the `nchar()` function)
name_length <- nchar(my_name)
# Print the number of letters in your name
name_length
# Create a variable `now_doing` that is your name followed by "is programming!"
# (use the `paste()` function)
now_doing <- paste(my_name, "is programming!")
# Make the `now_doing` variable upper case
toupper(now_doing)
hours <- 35  # 35 hours were worked this week
pay_rate <- 15 # Pay rate was at Seattle minimum wage
earnings <- hours * pay_rate
earnings
______________________________________
______________________________________
employee1_earnings <- calculate_earnings()
calculate_earnings <- function(hours, pay_rate) {
earnings <- hours * pay_rate
return(earnings)
}
employee1_earnings <- calculate_earnings()
employee1_earnings <- calculate_earnings(10, 12)
print()
print(employee1_earnings)
employee2_earnings <- calculate_earnings(40, 22)
calculate_earnings <- function(10.0, 12.00) {
earnings <- hours * pay_rate
return(earnings)
}
calculate_earnings <- function(10.0, 12.00) {
earnings <- hours * pay_rate
return(earnings)
}
print(employee3_earnings)
calculate_earnings_v2 <- function(hours, pay_rate) {
hours * pay_rate # You have to assign a returned value to a variable to use it
# printing a value is different from returning a value
}
employee3_earnings <- calculate_earnings_v2(60.0, 12.00)
watch <- function() {
result <-
return(result)
}
source('~/Desktop/学习/UWS/WI20/INFO201/Labs/Mengzhi Qin, lab2_ex_functions.R')
calculate_ratio(60, 12)
a2_days_left
winter_finals_end
july_fourth
intro <- function(YEAR, MAJOR) {
greet <- paste("Hello I am a", YEAR, "year, and my major is", MAJOR, ".")
return(greet)
}
# Call intro() function
intro('Second', 'Statistic')
Time difference of 9 days
a2_days_left
winter_finals_end
july_fourth
print(a2_days_left)
# Divide each number by the square root of 201 and save the new value in the
# original variable
fav_1 <- fav_1/sqrt(201)
# Pick two of your favorite numbers (between 1 and 100) and assign them to
# variables `fav_1` and `fav_2`
fav_1 <- 15
fav_2 <- 85
# Divide each number by the square root of 201 and save the new value in the
# original variable
fav_1 <- fav_1/sqrt(201)
fav_2 <- fav_2/sqrt(201)
# Create a variable `raw_sum` that is the sum of the two variables. Use the
# `sum()` function for practice.
raw_sum <- sum(fav_1, fav_2)
# Create a variable `round_sum` that is the `raw_sum` rounded to 1 decimal place.
# Use the `round()` function.
round_sum <- round(raw_sum, 1)
# Create two new variables `round_1` and `round_2` that are your `fav_1` and
# `fav_2` variables rounded to 1 decimal places
round_1 <- round(fav_1, 1)
round_2 <- round(fav_2, 1)
# Create a variable `sum_round` that is the sum of the rounded values
sum_round <- round(round_1, round_2)
# Which is bigger, `round_sum` or `sum_round`? (You can use the `max()` function!)
max <- max(round_sum, sum_round)
max
sum_round
round_sum
return(input + 3)
# Define a function `add_three` that takes a single argument and
# returns a value 3 greater than the input
add_three <- function(input) {
return(input + 3)
}
# Create a variable `ten` that is the result of passing 7 to your `add_three`
# function
ten <- add_three(7)
return(0.3048*feet + 0.0254*inches)
# Define a function `imperial_to_metric` that takes in two arguments: a number
# of feet and a number of inches
# The function should return the equivalent length in meters
imperial_to_metric <- function(feet, inches) {
return(0.3048*feet + 0.0254*inches)
}
# Create a variable `height_in_meters` by passing your height in imperial to the
# `imperial_to_metric` function
height_in_meters <- imperial_to_metric(6, 2)
height_in_meters
