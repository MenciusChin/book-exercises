# Create a vector of 100 employees ("Employee 1", "Employee 2", ... "Employee 100")
# Hint: use the `paste()` function and vector recycling to add a number to the word
# "Employee"
numbers <- seq(1, 100)
employees <- paste("Employee", numbers)
# Create a vector of 100 random salaries for the year 2017
# Use the `runif()` function to pick random numbers between 40000 and 50000
random_salaries <- runif(100, 40000, 50000)
# Create a vector of 100 annual salary adjustments between -5000 and 10000.
# (A negative number represents a salary decrease due to corporate greed)
# Again use the `runif()` function to pick 100 random numbers in that range.
salary_adjustment <- runif(100, -5000, 10000)
# Create a data frame `salaries` by combining the 3 vectors you just made
# Remember to set `stringsAsFactors=FALSE`!
salaries <- data.frame(employees, random_salaries, salary_adjustment, stringsAsFactors=FALSE)
# Add a column to the `salaries` data frame that represents each person's
# salary in 2018 (e.g., with the salary adjustment added in).
salary_2018 <- random_salaries - salary_adjustment
colnames(salaries) <- salary_2018
rownames(salaries) <- salary_2018
# Add a column to the `salaries` data frame that represents each person's
# salary in 2018 (e.g., with the salary adjustment added in).
salary_2018 <- random_salaries - salary_adjustment
rownames(salaries) <- salary_2018
View(salaries)
View(salaries)
salaries$salary_2018 <- random_salaries - salary_adjustment
source('~/Desktop/学习/UWS/WI20/INFO201/book-exercises/chapter-10-exercises/exercise-2/exercise.R')
View(salaries)
View(salaries)
# Add a column to the `salaries` data frame that represents each person's
# salary in 2018 (e.g., with the salary adjustment added in).
salaries$salary_2018 <- random_salaries + salary_adjustment
View(salaries)
# Add a column to the `salaries` data frame that has a value of `TRUE` if the
# person got a raise (their salary went up)
salary_raised <- salary_adjustment[salary_adjustment > 0]
# Add a column to the `salaries` data frame that has a value of `TRUE` if the
# person got a raise (their salary went up)
salaries$salary_raised <- salary_adjustment[salary_adjustment > 0]
# Add a column to the `salaries` data frame that has a value of `TRUE` if the
# person got a raise (their salary went up)
salaries$salary_raised <- salaries[salaries$salary_adjustment >0]
# Add a column to the `salaries` data frame that has a value of `TRUE` if the
# person got a raise (their salary went up)
salaries$salary_raised <- salaries[salaries$salary_adjustment > 0]
# Add a column to the `salaries` data frame that has a value of `TRUE` if the
# person got a raise (their salary went up)
salaries$salary_raised <- salaries[salaries$salary_adjustment > 0, ]
# Add a column to the `salaries` data frame that has a value of `TRUE` if the
# person got a raise (their salary went up)
salaries$salary_raised <- salaries[salaries$salary_adjustment > 0]
# Add a column to the `salaries` data frame that has a value of `TRUE` if the
# person got a raise (their salary went up)
salaries$salary_raised <- salaries[salaries$salary_adjustment > 0, salaries$salary_adjustment > 0]
# Add a column to the `salaries` data frame that has a value of `TRUE` if the
# person got a raise (their salary went up)
salaries$salary_raised <- salaries[salaries$salary_adjustment > 0, salary_adjustment > 0]
# Add a column to the `salaries` data frame that has a value of `TRUE` if the
# person got a raise (their salary went up)
salaries$salary_raised <- salaries[salaries$salary_adjustment > 0, ]
# Add a column to the `salaries` data frame that has a value of `TRUE` if the
# person got a raise (their salary went up)
salaries <- data.frame(salaries, raise = salaries[["salary_adjustment"]] > 0)
# What was the 2018 salary of Employee 57
salaries[58, 4]
# How many employees got a raise?
count(salaries[, "raise"])
# How many employees got a raise?
salaries[, "raise"]
# How many employees got a raise?
length(salaries[, "raise"])
raised[raised]
# How many employees got a raise?
raised <- salaries[, "raise"]
raised[raised]
length(raised[raised])
# What was the dollar value of the highest raise?
highest_raise <- max(salaries$salary_adjustment)
salaries[salaries$salary_adjustment == highest_raise]
salaries[salaries$salary_adjustment == highest_raise, ]
salaries[salaries$salary_adjustment == highest_raise, 3]
# What was the "name" of the employee who received the highest raise?
salaries[salaries$salary_adjustment == highest_raise, 1]
# What was the dollar value of the highest raise?
max_adjustment <- max(salaries$salary_adjustment)
salaries[salaries$salary_adjustment == max_adjustment, 3]
# What was the "name" of the employee who received the highest raise?
salaries[salaries$salary_adjustment == max_adjustment, 1]
# What was the largest decrease in salaries between the two years?
salaries[salaries$salary_adjustment == min(salaries$salary_adjustment), 3]
# What was the name of the employee who recieved largest decrease in salary?
salaries[salaries$salary_adjustment == min(salaries$salary_adjustment), 1]
# What was the average salary change?
avg_adjustment <- mean(salaries$salary_adjustment)
avg_adjustment
# For people who did not get a raise, how much money did they lose on average?
avg_lost <- mean(salaries[!salaries$raise])
# For people who did not get a raise, how much money did they lose on average?
avg_lost <- mean(salaries[!salaries$raise, 3])
avg_lost
# How many employees got a raise?
raised <- salaries[, "raise"]
length(raised[raised])
avg_lost
# Write a .csv file of your salary data to your working directory
write.csv(salaries, getwd(), row.names = FALSE)
# Write a .csv file of your salary data to your working directory
write.csv(salaries, "ch10exercise2.csv", row.names = FALSE)
length(salaries[, "raise"][salaries[, "raise"]])
source('~/Desktop/学习/UWS/WI20/INFO201/book-exercises/chapter-10-exercises/exercise-2/exercise.R')
# Use the `read.csv()` functoin to read the data from the `data/gates_money.csv`
# file into a variable called `grants` using the `read.csv()`
# Be sure to set your working directory in RStudio, and do NOT treat strings as
# factors!
grants <- read.csv("data/gates_money.csv", stringsAsFactors = FALSE)
# Use the `read.csv()` functoin to read the data from the `data/gates_money.csv`
# file into a variable called `grants` using the `read.csv()`
# Be sure to set your working directory in RStudio, and do NOT treat strings as
# factors!
getwd()
setwd("~/Desktop/学习/UWS/WI20/INFO201/book-exercises/chapter-10-exercises/exercise-4")
# Use the `read.csv()` functoin to read the data from the `data/gates_money.csv`
# file into a variable called `grants` using the `read.csv()`
# Be sure to set your working directory in RStudio, and do NOT treat strings as
# factors!
grants <- read.csv("data/gates_money.csv", stringsAsFactors = FALSE)
# Use the `read.csv()` functoin to read the data from the `data/gates_money.csv`
# file into a variable called `grants` using the `read.csv()`
# Be sure to set your working directory in RStudio, and do NOT treat strings as
# factors!
grants <- read.csv("data/gates_money.csv", stringsAsFactors = FALSE)
# Use the View function to look at the loaded data
View(grants)
# Create a vector of 100 employees ("Employee 1", "Employee 2", ... "Employee 100")
# Hint: use the `paste()` function and vector recycling to add a number to the word
# "Employee"
employees <- paste("Employee", seq(1, 100))
source('~/Desktop/学习/UWS/WI20/INFO201/book-exercises/chapter-10-exercises/exercise-2/exercise.R')
# Create a vector of 100 random salaries for the year 2017
# Use the `runif()` function to pick random numbers between 40000 and 50000
random_salaries <- runif(100, 40000, 50000)
# Create a variable `organization` that contains the `organization` column of
# the dataset
organization <- grants$organization
# Use the `read.csv()` functoin to read the data from the `data/gates_money.csv`
# file into a variable called `grants` using the `read.csv()`
# Be sure to set your working directory in RStudio, and do NOT treat strings as
# factors!
grants <- read.csv("data/gates_money.csv", stringsAsFactors = FALSE)
# Use the View function to look at the loaded data
View(grants)
# Create a variable `organization` that contains the `organization` column of
# the dataset
organization <- grants$organization
# Confirm that the "organization" column is a vector using the `is.vector()`
# function.
# This is a useful debugging tip if you hit errors later!
is.vector(organization)
# What was the mean grant value?
print(mean(grant$total_amount))
# What was the mean grant value?
print(mean(grants$total_amount))
print(max(grants$total_amount))
# What was the dollar amount of the smallest grant?
print(min(grants$total_amount))
# Which organization received the largest grant?
print(grants[grants$total_amount = max(grants$total_amount), 1])
# Which organization received the largest grant?
print(grants[grants$total_amount == max(grants$total_amount), 1])
# Which organization received the largest grant?
print(grants[grants$total_amount == max(grants$total_amount), 3])
# Which organization received the smallest grant?
print(grants[grants$total_amount == min(grants$total_amount), 3])
# How many grants were awarded in 2010?
print(length(grants[grants$start_year == 2010]))
# How many grants were awarded in 2010?
print(length(grants[grants$start_year == 2010, 9]))
source('~/Desktop/学习/UWS/WI20/INFO201/book-exercises/chapter-10-exercises/exercise-2/exercise.R')
# What was the "name" of the employee who received the highest raise?
salaries[salaries$salary_adjustment == max_adjustment, 1]
salaries[salaries$salary_adjustment == max_adjustment, 3]
# What was the "name" of the employee who received the highest raise?
salaries[salaries$salary_adjustment == max_adjustment, 1]
# What was the largest decrease in salaries between the two years?
salaries[salaries$salary_adjustment == min(salaries$salary_adjustment), 3]
# What was the name of the employee who recieved largest decrease in salary?
salaries[salaries$salary_adjustment == min(salaries$salary_adjustment), 1]
# What was the average salary change?
avg_adjustment <- mean(salaries$salary_adjustment)
avg_adjustment
# For people who did not get a raise, how much money did they lose on average?
avg_lost <- mean(salaries[!salaries$raise, 3])
# What was the 2018 salary of Employee 57
salaries[salaries$employees == "Employee 57", 4]
# How many employees got a raise?
length(salaries[, "raise"][salaries[, "raise"]])
# What was the dollar value of the highest raise?
salaries[salaries$salary_adjustment == max(salaries$salary_adjustment), 3]
# What was the "name" of the employee who received the highest raise?
salaries[salaries$salary_adjustment == max(salaries$salary_adjustment), 1]
